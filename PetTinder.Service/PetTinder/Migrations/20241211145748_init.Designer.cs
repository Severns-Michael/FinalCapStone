// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetTinder.Service;

#nullable disable

namespace PetTinder.Service.Migrations
{
    [DbContext(typeof(PTDb))]
    [Migration("20241211145748_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BreedTrait", b =>
                {
                    b.Property<int>("BreedsbreedId")
                        .HasColumnType("integer");

                    b.Property<int>("traitstraitId")
                        .HasColumnType("integer");

                    b.HasKey("BreedsbreedId", "traitstraitId");

                    b.HasIndex("traitstraitId");

                    b.ToTable("BreedTrait");
                });

            modelBuilder.Entity("PetTinder.Service.Breed", b =>
                {
                    b.Property<int>("breedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("breedId"));

                    b.Property<string>("breedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("officialName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("subBreed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("breedId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("PetTinder.Service.Swiped", b =>
                {
                    b.Property<int>("swipedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("swipedId"));

                    b.Property<int>("breedId")
                        .HasColumnType("integer");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("swipeYes")
                        .HasColumnType("boolean");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("swipedId");

                    b.HasIndex("breedId");

                    b.HasIndex("userId");

                    b.ToTable("Swipeds");
                });

            modelBuilder.Entity("PetTinder.Service.Trait", b =>
                {
                    b.Property<int>("traitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("traitId"));

                    b.Property<string>("traitName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("traitId");

                    b.ToTable("Traits");
                });

            modelBuilder.Entity("PetTinder.Service.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userId"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetTinder.Service.UserTrait", b =>
                {
                    b.Property<int>("userTraitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userTraitId"));

                    b.Property<bool>("isYes")
                        .HasColumnType("boolean");

                    b.Property<int>("traitId")
                        .HasColumnType("integer");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("userTraitId");

                    b.HasIndex("traitId");

                    b.HasIndex("userId");

                    b.ToTable("UserTrait");
                });

            modelBuilder.Entity("BreedTrait", b =>
                {
                    b.HasOne("PetTinder.Service.Breed", null)
                        .WithMany()
                        .HasForeignKey("BreedsbreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetTinder.Service.Trait", null)
                        .WithMany()
                        .HasForeignKey("traitstraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetTinder.Service.Swiped", b =>
                {
                    b.HasOne("PetTinder.Service.Breed", "breed")
                        .WithMany()
                        .HasForeignKey("breedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetTinder.Service.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("breed");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PetTinder.Service.UserTrait", b =>
                {
                    b.HasOne("PetTinder.Service.Trait", null)
                        .WithMany("UserTraits")
                        .HasForeignKey("traitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetTinder.Service.User", null)
                        .WithMany("UserTraits")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetTinder.Service.Trait", b =>
                {
                    b.Navigation("UserTraits");
                });

            modelBuilder.Entity("PetTinder.Service.User", b =>
                {
                    b.Navigation("UserTraits");
                });
#pragma warning restore 612, 618
        }
    }
}
